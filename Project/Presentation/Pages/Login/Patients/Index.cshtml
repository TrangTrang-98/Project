@page
@model Presentation.Pages.Login.Patients.IndexModel
@{
    ViewData["Title"] = "Index";
}
<h1>Thông Tin Bệnh Nhân</h1>

<p>
    <a asp-page="Create">Create New</a>
</p> 
<form>
    <p>
        <!-- Name: 
        <select asp-for="PatientName" asp-items="Model.Names">
            <option value="">All</option>
        </select> -->
        Find by name: 
        <input type="text" name="searchString" value="@ViewData["searchString"]"/>
        <input type="submit" value="Filter"/>
    </p>
</form>

<table class = "table table-bordered table-striped" >
    <thead>
        <tr> <!--tr xac dinh 1 hang trong bảng, th xac dinh 1 ô trong bảng -->
            <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].Id)
            </th>
            <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].Name)
            </th>
             <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].BirthDay)
            </th>
            <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].Gender)
            </th>
           
            <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].Address)
            </th>
            <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].Phone)
            </th>
             <!-- <th style="text-align:center" >
                @Html.DisplayNameFor(model => model.ListPatient[0].Email)
            </th> -->
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ListPatient) {
     var address = item.Address.ToString();
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
             <!-- <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td> -->
           <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@{
    var preDisable = Model.ListPatient.HasPrevious ? "" : "disabled";
    var nextDisable = Model.ListPatient.HasNext ? "" : "disabled";
}

<div class="container">
    <a  class="btn btn-default @preDisable" 
        asp-route-pageIndex="@(Model.ListPatient.PageIndex - 1)">Previous</a>

    <a  class="btn btn-default @nextDisable"
        asp-route-pageIndex="@(Model.ListPatient.PageIndex + 1)">Next</a>
</div>